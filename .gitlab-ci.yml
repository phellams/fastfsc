#---------------------------------------------
# Default values for all jobs unless overridden
default:
  image: docker.io/sgkens/phellams-automator:2.5.1
  tags:
    - docker
  artifacts:
    paths:
      - ./dist
      - ./coverage.xml
      - ./build.env
    #expire_in: 1 week
    # script:
    #   - |
    #     git clone https://gitlab.com/phellams/devops-template-powershell.git ./devops

#---------------------------------------------
# Define the stages of the pipeline
stages:
  - test
  - build
  - release
  - deploy
#---------------------------------------------
# Define pipeline-wide workflow control
workflow:
  rules:
    - when: always

#---------------------------------------------
# Define job templates for reuse (via YAML anchors)
.test_template: &test_template
  stage: test
  rules:
    - if: '$CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH == "develop"'
      when: on_success

.deploy_template: &deploy_template
  stage: deploy
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      when: on_success

.release_template: &release_template
  stage: release
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      when: on_success


#---------------------------------------------
#! || Test Stage ||
#==============================================
#  ?- pester: Run Pester tests
#  ?- pester_coverage: Run Pester tests with coverage
#  ?- analyzer: Run ScriptAnalyzer for static code analysis
#  ?- coverage: Generate code coverage report
#---------------------------------------------
pester:
  <<: *test_template
  script:
    - |
      pwsh -c Invoke-Pester -Script ./test/Test-Unit-Pester.ps1 -CI || exit 1

pester_coverage:
  <<: *test_template
  script:
    - |
      pwsh -c Invoke-Pester -Script ./devops/scripts/test/test-pester-before-build.ps1 -CI || exit 1

#---------------------------------------------
# ! || Build Stage ||
#==============================================
# ?- build: Build the module using psmpacker
# ?- nupkg_packages: Create NuGet packages
#---------------------------------------------
psmpacker-build:
  stage: build
  needs:
    - job: pester
      artifacts: false
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      when: on_success
  script:
    - |
      pwsh -c ./devops/scripts/build/build-module.ps1 || exit 1

analyzer:
  stage: build
  needs:
    - job: psmpacker-build
      artifacts: true
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      when: on_success
  before_script:
    - |
      git fetch --all
  script:
    - |
      chmod +x ./devops/scripts/test/test-sa-before-build.ps1
      pwsh -c ./devops/scripts/test/test-sa-before-build.ps1

# psgallery, gitlab, github, proget(psgallery,nuget)
nupsforge_general_nuget_package:
  stage: build
  needs:
    - job: psmpacker-build
      artifacts: true
    - job: analyzer
      artifacts: false
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      when: on_success
  before_script:
    - |
      git fetch --all
  script:
    - |
      pwsh -c ./devops/scripts/build/build-package-generic-nuget.ps1 || exit 1

nupsforge_chocolatey_nupsec_file:
  stage: build
  needs:
    - job: psmpacker-build
      artifacts: true
    - job: analyzer
      artifacts: false
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      when: on_success
  before_script:
    - |
      git fetch --all
  script:
    - |
      pwsh -c ./devops/scripts/build/build-nuspec-choco.ps1 || exit 1

mono_chocolatey_package:
  stage: build
  image: docker.io/chocolatey/choco:v2.5.1
  tags:
    - docker
  needs:
    - job: psmpacker-build
      artifacts: true
    - job: nupsforge_chocolatey_nupsec_file
      artifacts: true
    - job: analyzer
      artifacts: false
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      when: on_success
  script:
    - |
      chmod +x ./devops/scripts/build/build-package-choco.sh || exit 1
      bash -c ./devops/scripts/build/build-package-choco.sh || exit 1

zip_build:
  stage: build
  needs:
    - job: nupsforge_general_nuget_package
      artifacts: true
    - job: analyzer
      artifacts: false
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      when: on_success
  before_script:
    - |
      git fetch --all
  script:
    - |
      pwsh -c ./devops/scripts/build/build-package-psgallery.ps1 || exit 1

#---------------------------------------------
# ! || Release Stage ||
#==============================================
# ?- git_tag: Create GitLab tag from the current commit
# ?- mirror: Mirror the module to GitHub and GitLab which includes tags howver mirrors do not have releases
# ?- release: Create a release from the tag - gitlab
# ?- release: Create a release from the tag - github
#---------------------------------------------
# using curl to upload artifacts
upload_artifacts:
  <<: *release_template
  needs:
   - job: psmpacker-build
     artifacts: true
   - job: zip_build
     artifacts: true
   - job: nupsforge_general_nuget_package
     artifacts: true
   - job: mono_chocolatey_package
     artifacts: true
  script:
    - |
      pwsh -c ./devops/scripts/deploy/deploy-artifacts.ps1 || exit 1
      
# Create Git tag from the current commit
git_tag:
  <<: *release_template
  needs:
    - job: upload_artifacts
      artifacts: false
    - job: psmpacker-build
      artifacts: true
  script:
    - |
      pwsh -c ./devops/scripts/release/create-tag.ps1 || exit 1

# Mirror the repository to GitHub and GitLab
mirror_pointer_github:
  <<: *release_template
  needs:
    - job: git_tag
      artifacts: false
  script:
    - |
      pwsh -c ./devops/scripts/release/mirror-create-pointers.ps1 || exit 1

# mirror_pointer_gitlab:
#   <<: *release_template
#   needs:
#     - job: git_tag
#       artifacts: false
#   script:
#     - ./build/scripts/mirror-pointer-gitlab.ps1

gitlab_release:
  <<: *release_template
  needs:
    - job: psmpacker-build
      artifacts: true
    - job: upload_artifacts
      artifacts: true
  script:
    - |
      pwsh -c ./devops/scripts/release/release-from-tag-gitlab.ps1 || exit 1

# github_release:
#   <<: *release_template
#   needs:
#     - job: nupsforge_general_nuget_package
#       artifacts: true
#     - job: git_tag
#       artifacts: false
#     - job: mirror_pointer_github
#       artifacts: false
#     - job: gitlab_release
#       artifacts: false
#   script:
#     - |
#       pwsh
#       ./build/scripts/release/release-from-tag-github.ps1 || exit 1

codecov_release_coverage:
  <<: *release_template 
  needs: 
    - job: pester_coverage
      artifacts: true
    - job: git_tag
      artifacts: false
  script:
    - |
      pwsh -c ./devops/scripts/release/release-codecov-report.ps1 || exit 1
  

# coveralls_release_coverage:
#   <<: *release_template 
#   needs: 
#     - job: pester_coverage
#       artifacts: true
#   script:
#     - ./devops/scripts/release/release-codecov-report.ps1

#---------------------------------------------
# ! || Deploy Stage ||
#==============================================
upload_gitlab_package:
  <<: *deploy_template
  needs:
    - job: nupsforge_general_nuget_package
      artifacts: true
  script:
    - |
      pwsh -c ./devops/scripts/deploy/deploy-gitlab.ps1 || exit 1

# proget_nuget:
#   <<: *deploy_template
#   needs:
#     - job: nupsforge_general_nuget_package
#       artifacts: true
#   script:
#     - ./devops/scripts/deploy-proget.ps1

# Deploy Chocolatey package via choco push
upload_chocolatey:
  <<: *deploy_template
  image: docker.io/chocolatey/choco:v2.5.1
  needs:
    - job: psmpacker-build
      artifacts: true
    - job: mono_chocolatey_package
      artifacts: true
  tags:
    - docker
  script:
    - |
      chmod +x ./devops/scripts/deploy/deploy-choco.sh || exit 1
      bash -c ./devops/scripts/deploy/deploy-choco.sh || exit 1
      

# Deploy PSGallery module via zip and Publish modules
upload_psgallery:
  <<: *deploy_template
  needs:
   - job: zip_build
     artifacts: true
   - job: psmpacker-build
     artifacts: true
  script:
    - |
      pwsh -c ./devops/scripts/deploy/deploy-psgallary.ps1 || exit 1
